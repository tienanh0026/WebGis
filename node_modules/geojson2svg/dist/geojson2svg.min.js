!function(f){"object"==typeof exports&&"undefined"!=typeof module?module.exports=f():"function"==typeof define&&define.amd?define([],f):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).geojson2svg=f()}(function(){return function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var p="function"==typeof require&&require;if(!f&&p)return p(i,!0);if(u)return u(i,!0);throw(p=new Error("Cannot find module '"+i+"'")).code="MODULE_NOT_FOUND",p}p=n[i]={exports:{}},e[i][0].call(p.exports,function(r){return o(e[i][1][r]||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}({1:[function(require,module,exports){var singles,multies,multigeojson;singles=["Point","LineString","Polygon"],multies=["MultiPoint","MultiLineString","MultiPolygon"],multigeojson={explode:function(g){return-1<multies.indexOf(g.type)&&g.coordinates.map(function(part){var single={};return single.type=g.type.replace("Multi",""),single.coordinates=part,g.crs&&(single.crs=g.crs),single})},implode:function(gs){var sameType=gs.every(function(g){return-1<singles.indexOf(g.type)}),crs=gs[0].crs||0,sameCrs=gs.every(function(g){return(g.crs||0)==crs});if(sameType&&sameCrs){var multi={};return multi.type="Multi"+gs[0].type,multi.coordinates=[],0!=crs&&(multi.crs=crs),gs.forEach(function(g){multi.coordinates.push(g.coordinates)}),multi}return!1}},void 0!==module&&module.exports?module.exports=multigeojson:window&&(window.multigeojson=multigeojson)},{}],2:[function(require,module,exports){var multi=require("multigeojson");function getCoordString(coords,res,origin,precision){return coords.map(function(coord){return[(coord[0]-origin.x)/res,(origin.y-coord[1])/res]}).map(function(coord){return precision?coord[0].toFixed(precision)+","+coord[1].toFixed(precision):coord[0]+","+coord[1]}).join(" ")}function point(geom,res,origin,coords){var r=coords&&coords.r?coords.r:1,pointAsCircle=!(!coords||!coords.hasOwnProperty("pointAsCircle"))&&coords.pointAsCircle,coords=getCoordString([geom.coordinates],res,origin,coords.precision);return pointAsCircle?[coords]:["M"+coords+" m"+-r+",0 a"+r+","+r+" 0 1,1 "+2*r+",0 a"+r+","+r+" 0 1,1 "+-2*r+",0"]}function lineString(geom,res,origin,opt){return["M"+getCoordString(geom.coordinates,res,origin,opt.precision)]}function polygon(geom,res,origin,opt){var holes,path="M"+getCoordString(geom.coordinates[0],res,origin,opt.precision);if(holes=1<geom.coordinates.length?geom.coordinates.slice(1,geom.coordinates.length):holes)for(var i=0;i<holes.length;i++)path+=" M"+getCoordString(holes[i],res,origin,opt.precision);return[path+="Z"]}module.exports={Point:point,MultiPoint:function(paths,res,origin,opt){var explode=!(!opt||!opt.hasOwnProperty("explode"))&&opt.explode,paths=multi.explode(paths).map(function(single){return point(single,res,origin,opt)[0]});return explode?paths:[paths.join(" ")]},LineString:lineString,MultiLineString:function(paths,res,origin,opt){var explode=!(!opt||!opt.hasOwnProperty("explode"))&&opt.explode,paths=multi.explode(paths).map(function(single){return lineString(single,res,origin,opt)[0]});return explode?paths:[paths.join(" ")]},Polygon:polygon,MultiPolygon:function(paths,res,origin,opt){var explode=!!opt.hasOwnProperty("explode")&&opt.explode,paths=multi.explode(paths).map(function(single){return polygon(single,res,origin,opt)[0]});return explode?paths:[paths.join(" ").replace(/Z/g,"")+"Z"]}}},{multigeojson:1}],3:[function(require,module,exports){module.exports=function(a,b){var c={};return Object.keys(a).forEach(function(key){c[key]=a[key]}),Object.keys(b).forEach(function(key){c[key]=b[key]}),c}},{}],4:[function(g2svg,module,exports){var extend=g2svg("./extend.js"),converter=g2svg("./converter.js"),g2svg=function(options){this.options=options||{},this.viewportSize=this.options.viewportSize||{width:256,height:256},this.mapExtent=this.options.mapExtent||{left:-20037508.342789244,right:20037508.342789244,bottom:-20037508.342789244,top:20037508.342789244},this.res=this.calResolution(this.mapExtent,this.viewportSize,this.options.fitTo)};function valueAt(obj,path){return path.split(".").reduce(function(prev,cur,i,arr){if(prev.hasOwnProperty(cur))return prev[cur];throw new Error(arr.slice(0,i+1).join(".")+" is not a valid property path")},obj)}g2svg.prototype.calResolution=function(extent,yres,fitTo){var xres=(extent.right-extent.left)/yres.width,yres=(extent.top-extent.bottom)/yres.height;if(fitTo){if("width"===fitTo.toLowerCase())return xres;if("height"===fitTo.toLowerCase())return yres;throw new Error('"fitTo" option should be "width" or "height" ')}return Math.max(xres,yres)},g2svg.prototype.convert=function(geojson,options){var opt=extend(this.options,options||{}),svgElements=[];if("FeatureCollection"==geojson.type)for(var i=0;i<geojson.features.length;i++)svgElements=svgElements.concat(this.convertFeature(geojson.features[i],opt));else if("Feature"==geojson.type)svgElements=this.convertFeature(geojson,opt);else if("GeometryCollection"==geojson.type)for(i=0;i<geojson.geometries.length;i++)svgElements=svgElements.concat(this.convertGeometry(geojson.geometries[i],opt));else{if(!converter[geojson.type])return;svgElements=this.convertGeometry(geojson,opt)}return opt.callback&&opt.callback.call(this,svgElements),svgElements},g2svg.prototype.convertFeature=function(feature,opt){if(feature||feature.geometry){opt=extend(this.options,opt||{});opt.attributes&&opt.attributes instanceof Array?(id=opt.attributes,opt.attributes=id.reduce(function(sum,property){if("string"==typeof property){var key=property.split(".").pop();try{val=valueAt(feature,property)}catch(e){val=!1}val&&(sum[key]=val)}else if("object"==typeof property&&property.type&&property.property)if("dynamic"===property.type){var val,key=property.key||property.property.split(".").pop();try{val=valueAt(feature,property.property)}catch(e){val=!1}val&&(sum[key]=val)}else"static"===property.type&&property.value&&(sum[property.property]=property.value);return sum},{})):opt.attributes=opt.attributes||{};var id=opt.attributes.id||feature.id||(feature.properties&&feature.properties.id?feature.properties.id:null);return id&&(opt.attributes.id=id),this.convertGeometry(feature.geometry,opt)}},g2svg.prototype.convertGeometry=function(geom,paths){if(converter[geom.type]){var opt=extend(this.options,paths||{}),output=opt.output||"svg",paths=converter[geom.type].call(this,geom,this.res,{x:this.mapExtent.left,y:this.mapExtent.top},opt);return"svg"==output.toLowerCase()?paths.map(function(path){return function(path,type,attributes,opt){var key,svg={},pointAsCircle=!(!opt||!opt.hasOwnProperty("pointAsCircle"))&&opt.pointAsCircle;"Point"!=type&&"MultiPoint"!=type||!pointAsCircle?(svg={d:path},"Polygon"!=type&&"MultiPolygon"!=type||svg["fill-rule"]):(svg.cx=path.split(",")[0],svg.cy=path.split(",")[1],svg.r=opt&&opt.r?opt.r:"1");for(key in attributes)svg[key]=attributes[key];return svg}(path,geom.type,opt.attributes,opt)}).map(function(json){return function(json,type,pointAsCircle){var key,pointAsCircle=!(!pointAsCircle||!pointAsCircle.hasOwnProperty("pointAsCircle"))&&pointAsCircle.pointAsCircle,ele="<path";"Point"!=type&&"MultiPoint"!=type||!pointAsCircle||(ele="<circle");for(key in json)ele+=" "+key+'="'+json[key]+'"';return ele+="/>"}(json,geom.type,opt)}):paths}},module.exports=g2svg},{"./converter.js":2,"./extend.js":3}],5:[function(require,module,exports){var g2svg=require("./instance.js");module.exports=function(options){return new g2svg(options)}},{"./instance.js":4}]},{},[5])(5)});
